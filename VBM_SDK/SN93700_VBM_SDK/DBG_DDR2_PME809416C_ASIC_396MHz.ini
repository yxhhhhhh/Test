/*!
	The information contained herein is the exclusive property of SONiX and shall not be
	distributed, or disclosed in whole or in part without prior permission of SONiX.
	SONiX reserves the right to make changes without further notice to the product to improve
	reliability, function or design. SONiX does not assume any liability arising out of the
	application or use of any product or circuits described herein. All application information
	is advisor and does not from part of the specification.

	\file		DBG_DDR2_PME809416C_ASIC_396MHz.ini
	\brief		Initialization Script for Debugging in DDR-SDRAM (For Ver 2)
	\author		Pierce
	\version	2
	\date		2017/07/13
	\copyright	Copyright (C) 2017 SONiX Technology Co., Ltd. All rights reserved.
*/
reset											//!< Reset JLINK
_WDWORD(0x9290000C, 0x00000010);				//!< Disable Watch Dog Timer
_WDWORD(0x92900014, 0x00000001);				//!< Clear WDT Flag
_WDWORD(0x92900018, 0x000000FF);				//!< Set WDT duration time
_WDWORD(0x92900004, 0x00000001);				//!< Set WDT Timer
_WDWORD(0x92900008, 0x00005AB9);
_WDWORD(0x9290000C, 0x00000013);				//!< Enable Watch Dog Timer
_sleep_(1);
reset

_WDWORD(0x9290000C, 0x00000010);				//!< Disable Watch Dog Timer
_WDWORD(0x90000008, 0x011FF224);				//!< Set DDR / CPU rate
_WDWORD(0x9000000C, 0x00000028);				//!< CPU PLL Select
_WDWORD(0x900000AC, 0x84C56659);				//!< Ser DDR PLL
_WDWORD(0x900000A8, 0x003911F3);				//!< DDR VREF Enable
_sleep_(1);

//! DDR2
_WDWORD(0x99000000,   0x00000400);		// DENALI_CTL_00
_WDWORD(0x99000004,   0x00000000);		// DENALI_CTL_01

_WDWORD(0x99000040,   0x02013568);		// DENALI_CTL_16	0x020146E3
_WDWORD(0x99000044,   0x00c8009f);		// DENALI_CTL_17
_WDWORD(0x99000048,   0x00040a00);		// DENALI_CTL_18
_WDWORD(0x9900004C,   0x18050202);		// DENALI_CTL_19
_WDWORD(0x99000050,   0x13060414);		// DENALI_CTL_20
_WDWORD(0x99000054,   0x00060204);		// DENALI_CTL_21
_WDWORD(0x99000058,   0x03036c4a);		// DENALI_CTL_22	//0x03036D60
_WDWORD(0x9900005C,   0x00070600);		// DENALI_CTL_23 [24:24] auto-precharge
_WDWORD(0x99000060,   0x020d0101);		// DENALI_CTL_24 [26:24]: 1->BL2, 2->BL4, 3->BL8
_WDWORD(0x99000064,   0x00000006);		// DENALI_CTL_25 bit 24 needs to be 0 <-- HW bug
_WDWORD(0x99000068,   0x00002a01);		// DENALI_CTL_26
_WDWORD(0x9900006C,   0x00000603);		// DENALI_CTL_27 Refresh between 0xc2d cycles	//0x00000C2D //61
_WDWORD(0x99000070,   0x00020002);		// DENALI_CTL_28
_WDWORD(0x99000074,   0x00c80008);		// DENALI_CTL_29
_WDWORD(0x99000078,   0x0000002e);		// DENALI_CTL_30
_WDWORD(0x9900007C,   0x03000001);		// DENALI_CTL_31
_WDWORD(0x99000080,   0x00000003);		// DENALI_CTL_32
_WDWORD(0x99000084,   0x00000000);		// DENALI_CTL_33
_WDWORD(0x99000088,   0x00000000);		// DENALI_CTL_34
//_WDWORD(0x9900008C, 0x00000000);		// DENALI_CTL_35
_WDWORD(0x99000090,   0x00000000);		// DENALI_CTL_36
_WDWORD(0x99000094,   0x000c5200);		// DENALI_CTL_37 MRS0 A5200:burst4 A5300:burst8
_WDWORD(0x99000098,   0x00000000);		// DENALI_CTL_38 BIT6=0 to disable ODT, BIT1=1 ODS=weak
_WDWORD(0x9900009C,   0x00000000);		// DENALI_CTL_39
_WDWORD(0x990000A0,   0x01000000);		// DENALI_CTL_40
_WDWORD(0x990000A4,   0x00000001);		// DENALI_CTL_41
_WDWORD(0x990000A8,   0x00000000);		// DENALI_CTL_42
_WDWORD(0x990000AC,   0x00000000);		// DENALI_CTL_43
_WDWORD(0x990000B0,   0x00000000);		// DENALI_CTL_44
_WDWORD(0x990000B4,   0x00000000);		// DENALI_CTL_45
_WDWORD(0x990000B8,   0x00000000);		// DENALI_CTL_46
_WDWORD(0x990000BC,   0x00000000);		// DENALI_CTL_47
_WDWORD(0x990000C0,   0x01000000);		// DENALI_CTL_48
_WDWORD(0x990000C4,   0x00000202);		// DENALI_CTL_49
_WDWORD(0x990000C8,   0x01ffff0a);                // DENALI_CTL_50
_WDWORD(0x990000CC,   0x01010101);                // DENALI_CTL_51
_WDWORD(0x990000D0,   0x03010101);                // DENALI_CTL_52
_WDWORD(0x990000D4,   0x00000001);                // DENALI_CTL_53
_WDWORD(0x990000D8,   0x00000000);                // DENALI_CTL_54
_WDWORD(0x990000DC,   0x00000001);                // DENALI_CTL_55
_WDWORD(0x990000E0,   0x00000000);                // DENALI_CTL_56
//_WDWORD(0x990000E4, 0x00000000);                // DENALI_CTL_57
//_WDWORD(0x990000E8, 0x00000000);                // DENALI_CTL_58
//_WDWORD(0x990000EC, 0x00000000);                // DENALI_CTL_59
//_WDWORD(0x990000F0, 0x00000000);                // DENALI_CTL_60
//_WDWORD(0x990000F4, 0x00000000);                // DENALI_CTL_61
//_WDWORD(0x990000F8, 0x00000000);                // DENALI_CTL_62
//_WDWORD(0x990000FC, 0x00000000);                // DENALI_CTL_63
//_WDWORD(0x99000100, 0x00000000);                // DENALI_CTL_64
_WDWORD(0x99000104,   0x03000000);		// DENALI_CTL_65
_WDWORD(0x99000108,   0x00010003);		// DENALI_CTL_66
_WDWORD(0x9900010C,   0x00000001);		// DENALI_CTL_67
_WDWORD(0x99000110,   0x0f0f0f00);		// DENALI_CTL_68
_WDWORD(0x99000114,   0x0f0f0f0f);		// DENALI_CTL_69
_WDWORD(0x99000118,   0x0f0f0f0f);		// DENALI_CTL_70
_WDWORD(0x9900011C,   0x050f0f0f);		// DENALI_CTL_71
_WDWORD(0x99000120,   0x05050005);		// DENALI_CTL_72
_WDWORD(0x99000124,   0x00050500);		// DENALI_CTL_73
_WDWORD(0x99000128,   0x05000505);		// DENALI_CTL_74
_WDWORD(0x9900012C,   0x05050005);		// DENALI_CTL_75	0x02020302
_WDWORD(0x99000130,   0x00050500);		// DENALI_CTL_76
_WDWORD(0x99000134,   0x05000505);		// DENALI_CTL_77
_WDWORD(0x99000138,   0x05050005);		// DENALI_CTL_78
_WDWORD(0x9900013C,   0x00050500);		// DENALI_CTL_79
_WDWORD(0x99000140,   0x00011203);		// DENALI_CTL_80
_WDWORD(0x99000144,   0x12000112);		// DENALI_CTL_81
_WDWORD(0x99000148,   0x01120001);		// DENALI_CTL_82
_WDWORD(0x9900014C,   0x00011200);		// DENALI_CTL_83
_WDWORD(0x99000150,   0x12000112);		// DENALI_CTL_84
_WDWORD(0x99000154,   0x01120001);		// DENALI_CTL_85
_WDWORD(0x99000158,   0x00011200);		// DENALI_CTL_86
_WDWORD(0x9900015C,   0x12000112);		// DENALI_CTL_87
_WDWORD(0x99000160,   0x00000001);		// DENALI_CTL_88
_WDWORD(0x99000164,   0x00000000);		// DENALI_CTL_89
_WDWORD(0x99000168,   0x00000900);		// DENALI_CTL_90
_WDWORD(0x9900016C,   0x000c0605);		// DENALI_CTL_91	0x00185A05
_WDWORD(0x99000170,   0x02000200);		// DENALI_CTL_92
_WDWORD(0x99000174,   0x02000200);		// DENALI_CTL_93
_WDWORD(0x99000178,   0x00000c06);		// DENALI_CTL_94
_WDWORD(0x9900017C,   0x0000783c);		// DENALI_CTL_95
_WDWORD(0x99000180,   0x06020405);		// DENALI_CTL_96
_WDWORD(0x99000184,   0x00000105);		// DENALI_CTL_97

_WDWORD(0x99000200,   0x04120413);		// DDR_PHY_00
_WDWORD(0x99000204,   0x04140424);		// DDR_PHY_01
_WDWORD(0x99000208,   0x60010000);		// DDR_PHY_02:BIT3/4 = 01 for > 333 MHz
_WDWORD(0x9900020C,   0x00000045);		// DDR_PHY_03
_WDWORD(0x99000210,   0x00120024);		// DDR_PHY_04
_WDWORD(0x99000214,   0x40404040);		// DDR_PHY_05: Slice0, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
//_WDWORD(0x99000218, 0x00000000);		// DDR_PHY_06
//_WDWORD(0x9900021C, 0x00000000);		// DDR_PHY_07
//_WDWORD(0x99000220, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000224, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000228, 0x00000000);		// DDR_PHY_10
//_WDWORD(0x9900022C, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000230, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000234, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000238, 0x00000000);		// DDR_PHY
//_WDWORD(0x9900023C, 0x00000000);		// DDR_PHY_15
_WDWORD(0x99000240,   0x04120413);		// DDR_PHY_16
_WDWORD(0x99000244,   0x04140424);		// DDR_PHY_17
_WDWORD(0x99000248,   0x60010000);		// DDR_PHY_18:BIT3/4 = 01 for > 333 MHz
_WDWORD(0x9900024C,   0x00000045);		// DDR_PHY
_WDWORD(0x99000250,   0x00120024);		// DDR_PHY
_WDWORD(0x99000254,   0x40404040);		// DDR_PHY_21: Slice1, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
//_WDWORD(0x99000258, 0x00000000);		// DDR_PHY
//_WDWORD(0x9900025C, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000260, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000264, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000268, 0x00000000);		// DDR_PHY
//_WDWORD(0x9900026C, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000270, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000274, 0x00000000);		// DDR_PHY
//_WDWORD(0x99000278, 0x00000000);		// DDR_PHY_30
//_WDWORD(0x9900027C, 0x00000000);		// DDR_PHY_31
//_WDWORD(0x99000280, 0x04120413);		// DDR_PHY_32
//_WDWORD(0x99000284, 0x04140424);		// DDR_PHY_33
//_WDWORD(0x99000288, 0x60010000);		// DDR_PHY_34:BIT3/4 = 01 for > 333 MHz
//_WDWORD(0x9900028C, 0x00000045);		// DDR_PHY_35
//_WDWORD(0x99000290, 0x00120024);		// DDR_PHY_36
//_WDWORD(0x99000294, 0x40404040);		// DDR_PHY_37: Slice2, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
//_WDWORD(0x99000298, 0x00000000);		// DDR_PHY
//_WDWORD(0x9900029C, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002A0, 0x00000000);		// DDR_PHY_40
//_WDWORD(0x990002A4, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002A8, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002AC, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002B0, 0x00000000);		// DDR_PHY_44
//_WDWORD(0x990002B4, 0x00000000);		// DDR_PHY_45
//_WDWORD(0x990002B8, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002BC, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002C0, 0x04120413);		// DDR_PHY_48
//_WDWORD(0x990002C4, 0x04140424);		// DDR_PHY
//_WDWORD(0x990002C8, 0x60010000);		// DDR_PHY_50:BIT3/4 = 01 for > 333 MHz
//_WDWORD(0x990002CC, 0x00000045);		// DDR_PHY_51
//_WDWORD(0x990002D0, 0x00120024);		// DDR_PHY_52
//_WDWORD(0x990002D4, 0x40404040);		// DDR_PHY_53: Slice3, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
//_WDWORD(0x990002D8, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002DC, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002E0, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002E4, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002E8, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002EC, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002F0, 0x00000000);		// DDR_PHY_60
//_WDWORD(0x990002F4, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002F8, 0x00000000);		// DDR_PHY
//_WDWORD(0x990002FC, 0x00000000);		// DDR_PHY
_WDWORD(0x99000300,   0x00004006);		// DDR_PHY_64
_WDWORD(0x99000304,   0x00000000);		// DDR_PHY_65: ODT disable
_WDWORD(0x99000308,   0x81000000);		// DDR_PHY_66: 0x00020002->half drive (DQS & DQ & DM)
_WDWORD(0x9900030C,   0x00100010);		// DDR_PHY_67: 0x00020002->half drive (clock & control)
_WDWORD(0x99000310,   0x01000000);		// DDR_PHY_68: 0x00020002->half drive (input feedback & input and output feedback)
_WDWORD(0x99000314,   0x0000f000);		// DDR_PHY_69
_WDWORD(0x99000318,   0x0000f000);		// DDR_PHY_70: ODT disable
_WDWORD(0x9900031C,   0x0000f000);		// DDR_PHY_71: ODT disable

_WDWORD(0x99000214, 0x40404146);		// DDR_PHY_05: Slice0, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
_WDWORD(0x99000254, 0x40404047);		// DDR_PHY_21: Slice1, BIT[7:0]: rddqs_delay, [15:8]: wr_delay
_WDWORD(0x99000000, 0x00000401);		// DDR_CTL_START
_sleep_(1);

_WDWORD(0x90000014, 0x00100F01);				//!< REMAP = 1
LOAD "%L" INCREMENTAL
reset
//_sleep_(100);
//PC = 0x00000000;								//!< Setup Program Counter
//CPSR = 0xD3;
//SPSR = 0x10;
//g, main											//!< go to main
